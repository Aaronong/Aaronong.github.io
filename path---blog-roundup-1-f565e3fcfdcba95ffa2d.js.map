{"version":3,"sources":["webpack:///path---blog-roundup-1-f565e3fcfdcba95ffa2d.js","webpack:///./.cache/json/blog-roundup-1.json"],"names":["webpackJsonp","598","module","exports","data","markdownRemark","excerpt","html","frontmatter","date","path","title","pathContext","id"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,QAAA,+PAAAC,KAAA,k7HAAAC,aAAguIC,KAAA,gBAAAC,KAAA,WAAAC,MAAA,2BAA2EC,aAAgBC,GAAA","file":"path---blog-roundup-1-f565e3fcfdcba95ffa2d.js","sourcesContent":["webpackJsonp([59529089366429],{\n\n/***/ 598:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"excerpt\":\"React was open sourced two weeks ago and it's time for a little round-up of what\\nhas been going on. Khan Academy Question Editor It looks like  Sophie Alpert  is the first person\\noutside of Facebook and Instagram to push React code to production. We…\",\"html\":\"<p>React was open sourced two weeks ago and it's time for a little round-up of what\\nhas been going on.</p>\\n<h2>Khan Academy Question Editor</h2>\\n<p>It looks like <a href=\\\"http://sophiebits.com/\\\">Sophie Alpert</a> is the first person\\noutside of Facebook and Instagram to push React code to production. We are very\\ngrateful for her contributions in form of pull requests, bug reports and\\npresence on IRC (<a href=\\\"irc://chat.freenode.net/reactjs\\\">#reactjs on Freenode</a>).\\nSophie wrote about her experience using React:</p>\\n<blockquote>\\n<p>I just rewrote a 2000-line project in React and have now made a handful of\\npull requests to React. Everything about React I've seen so far seems really\\nwell thought-out and I'm proud to be the first non-FB/IG production user of\\nReact.</p>\\n<p>The project that I rewrote in React (and am continuing to improve) is the Khan\\nAcademy question editor which content creators can use to enter questions and\\nhints that will be presented to students:</p>\\n<figure><a href=\\\"http://sophiebits.com/2013/06/09/using-react-to-speed-up-khan-academy.html\\\"></a></figure>\\n<p><a href=\\\"http://sophiebits.com/2013/06/09/using-react-to-speed-up-khan-academy.html\\\">Read the full\\npost...</a></p>\\n</blockquote>\\n<h2>Pimp my Backbone.View (by replacing it with React)</h2>\\n<p><a href=\\\"https://blog.mayflower.de/\\\">Paul Seiffert</a> wrote a blog post that explains how\\nto integrate React into Backbone applications.</p>\\n<blockquote>\\n<p>React has some interesting concepts for JavaScript view objects that can be\\nused to eliminate this one big problem I have with Backbone.js.</p>\\n<p>As in most MVC implementations (although React is probably just a VC\\nimplementation), a view is one portion of the screen that is managed by a\\ncontrolling object. This object is responsible for deciding when to re-render\\nthe view and how to react to user input. With React, these view-controllers\\nobjects are called components. A component knows how to render its view and\\nhow to handle to the user's interaction with it.</p>\\n<p>The interesting thing is that React is figuring out by itself when to\\nre-render a view and how to do this in the most efficient way.</p>\\n<p><a href=\\\"https://blog.mayflower.de/3937-Backbone-React.html\\\">Read the full post...</a></p>\\n</blockquote>\\n<h2>Using facebook's React with require.js</h2>\\n<p><a href=\\\"http://blog.xenji.com/\\\">Mario Mueller</a> wrote a menu component in React and was\\nable to easily integrate it with require.js, EventEmitter2 and bower.</p>\\n<blockquote>\\n<p>I recently stumbled upon facebook's React library, which is a JavaScript\\nlibrary for building reusable frontend components. Even if this lib is only at\\nversion 0.3.x it behaves very stable, it is fast and is fun to code. I'm a big\\nfan of require.js, so I tried to use React within the require.js eco system.\\nIt was not as hard as expected and here are some examples and some thoughts\\nabout it.</p>\\n<p><a href=\\\"http://blog.xenji.com/2013/06/facebooks-react-require-js.html\\\">Read the full\\npost...</a></p>\\n</blockquote>\\n<h2>Origins of React</h2>\\n<p><a href=\\\"http://www.petehunt.net/blog/\\\">Pete Hunt</a> explained what differentiates React\\nfrom other JavaScript libraries in <a href=\\\"/blog/2013/06/05/why-react.html\\\">a previous blog\\npost</a>. <a href=\\\"http://leebyron.com/\\\">Lee Byron</a> gives\\nanother perspective on Quora:</p>\\n<blockquote>\\n<p>React isn't quite like any other popular JavaScript libraries, and it solves a\\nvery specific problem: complex UI rendering. It's also intended to be used\\nalong side many other popular libraries. For example, React works well with\\nBackbone.js, amongst many others.</p>\\n<p>React was born out of frustrations with the common pattern of writing two-way\\ndata bindings in complex MVC apps. React is an implementation of one-way data\\nbindings.</p>\\n<p><a href=\\\"https://www.quora.com/React-JS-Library/How-is-Facebooks-React-JavaScript-library/answer/Lee-Byron?srid=3DcX\\\">Read the full\\npost...</a></p>\\n</blockquote>\",\"frontmatter\":{\"date\":\"July 12, 2017\",\"path\":\"roundup1\",\"title\":\"Community Round-up #1\"}}},\"pathContext\":{\"id\":\"roundup1\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-roundup-1-f565e3fcfdcba95ffa2d.js","module.exports = {\"data\":{\"markdownRemark\":{\"excerpt\":\"React was open sourced two weeks ago and it's time for a little round-up of what\\nhas been going on. Khan Academy Question Editor It looks like  Sophie Alpert  is the first person\\noutside of Facebook and Instagram to push React code to production. We…\",\"html\":\"<p>React was open sourced two weeks ago and it's time for a little round-up of what\\nhas been going on.</p>\\n<h2>Khan Academy Question Editor</h2>\\n<p>It looks like <a href=\\\"http://sophiebits.com/\\\">Sophie Alpert</a> is the first person\\noutside of Facebook and Instagram to push React code to production. We are very\\ngrateful for her contributions in form of pull requests, bug reports and\\npresence on IRC (<a href=\\\"irc://chat.freenode.net/reactjs\\\">#reactjs on Freenode</a>).\\nSophie wrote about her experience using React:</p>\\n<blockquote>\\n<p>I just rewrote a 2000-line project in React and have now made a handful of\\npull requests to React. Everything about React I've seen so far seems really\\nwell thought-out and I'm proud to be the first non-FB/IG production user of\\nReact.</p>\\n<p>The project that I rewrote in React (and am continuing to improve) is the Khan\\nAcademy question editor which content creators can use to enter questions and\\nhints that will be presented to students:</p>\\n<figure><a href=\\\"http://sophiebits.com/2013/06/09/using-react-to-speed-up-khan-academy.html\\\"></a></figure>\\n<p><a href=\\\"http://sophiebits.com/2013/06/09/using-react-to-speed-up-khan-academy.html\\\">Read the full\\npost...</a></p>\\n</blockquote>\\n<h2>Pimp my Backbone.View (by replacing it with React)</h2>\\n<p><a href=\\\"https://blog.mayflower.de/\\\">Paul Seiffert</a> wrote a blog post that explains how\\nto integrate React into Backbone applications.</p>\\n<blockquote>\\n<p>React has some interesting concepts for JavaScript view objects that can be\\nused to eliminate this one big problem I have with Backbone.js.</p>\\n<p>As in most MVC implementations (although React is probably just a VC\\nimplementation), a view is one portion of the screen that is managed by a\\ncontrolling object. This object is responsible for deciding when to re-render\\nthe view and how to react to user input. With React, these view-controllers\\nobjects are called components. A component knows how to render its view and\\nhow to handle to the user's interaction with it.</p>\\n<p>The interesting thing is that React is figuring out by itself when to\\nre-render a view and how to do this in the most efficient way.</p>\\n<p><a href=\\\"https://blog.mayflower.de/3937-Backbone-React.html\\\">Read the full post...</a></p>\\n</blockquote>\\n<h2>Using facebook's React with require.js</h2>\\n<p><a href=\\\"http://blog.xenji.com/\\\">Mario Mueller</a> wrote a menu component in React and was\\nable to easily integrate it with require.js, EventEmitter2 and bower.</p>\\n<blockquote>\\n<p>I recently stumbled upon facebook's React library, which is a JavaScript\\nlibrary for building reusable frontend components. Even if this lib is only at\\nversion 0.3.x it behaves very stable, it is fast and is fun to code. I'm a big\\nfan of require.js, so I tried to use React within the require.js eco system.\\nIt was not as hard as expected and here are some examples and some thoughts\\nabout it.</p>\\n<p><a href=\\\"http://blog.xenji.com/2013/06/facebooks-react-require-js.html\\\">Read the full\\npost...</a></p>\\n</blockquote>\\n<h2>Origins of React</h2>\\n<p><a href=\\\"http://www.petehunt.net/blog/\\\">Pete Hunt</a> explained what differentiates React\\nfrom other JavaScript libraries in <a href=\\\"/blog/2013/06/05/why-react.html\\\">a previous blog\\npost</a>. <a href=\\\"http://leebyron.com/\\\">Lee Byron</a> gives\\nanother perspective on Quora:</p>\\n<blockquote>\\n<p>React isn't quite like any other popular JavaScript libraries, and it solves a\\nvery specific problem: complex UI rendering. It's also intended to be used\\nalong side many other popular libraries. For example, React works well with\\nBackbone.js, amongst many others.</p>\\n<p>React was born out of frustrations with the common pattern of writing two-way\\ndata bindings in complex MVC apps. React is an implementation of one-way data\\nbindings.</p>\\n<p><a href=\\\"https://www.quora.com/React-JS-Library/How-is-Facebooks-React-JavaScript-library/answer/Lee-Byron?srid=3DcX\\\">Read the full\\npost...</a></p>\\n</blockquote>\",\"frontmatter\":{\"date\":\"July 12, 2017\",\"path\":\"roundup1\",\"title\":\"Community Round-up #1\"}}},\"pathContext\":{\"id\":\"roundup1\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-roundup-1.json\n// module id = 598\n// module chunks = 59529089366429"],"sourceRoot":""}